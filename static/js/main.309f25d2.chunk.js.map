{"version":3,"sources":["contexts/AppContext.js","actions/index.js","components/Home/Home.tsx","components/Product/ProductCard/ProductCard.tsx","images/ES.png","images/Portfolio.png","images/FaceTrack.png","components/Product/Product.tsx","images/Cat.png","components/Misc/Misc.tsx","components/Works/Works.tsx","components/Contact/Contact.tsx","components/Header/HeaderLogo/HeaderLogo.tsx","components/Header/HeaderButton/HeaderButton.tsx","components/Header/Header.tsx","reducers/pageState.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["AppContext","createContext","CHANGE_PAGE_STATE_HOME","CHANGE_PAGE_STATE_WORKS","CHANGE_PAGE_STATE_CONTACT","Home","dispatch","useContext","useState","pageState","setPageState","useEffect","type","setSkillContentAnim","window","addEventListener","className","style","backgroundImage","FacebookShareButton","url","FacebookIcon","size","round","LinkedinShareButton","LinkedinIcon","href","icon","color","ProductCard","props","info","platformIconIonfo","fontName","topImage","title","description","Product","ESgenerator","Portfolio","FaceTrack","Misc","ProductSample","Works","stableDispatch","useCallback","toggleState","setToggleState","changeToggleState","toggle","toggleButtonClassName","buttonName","selectedButtonClass","join","onClick","e","Contact","HeaderLogo","backgroundColor","logoColor","HeaderButton","fontInfo","contentTextColor","contentText","Header","state","homeColor","setHomeColor","worksColor","setWorksColor","contactColor","setContactColor","setLogoColor","borderBottomColor","exact","to","textDecoration","path","action","App","useReducer","Provider","value","Boolean","location","hostname","match","library","add","fab","fas","far","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.309f25d2.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst AppContext = createContext();\n\nexport default AppContext;","export const CHANGE_PAGE_STATE_HOME = \"CHANGE_PAGE_STATE_HOME\";\nexport const CHANGE_PAGE_STATE_WORKS = \"CHANGE_PAGE_STATE_WORKS\";\nexport const CHANGE_PAGE_STATE_CONTACT = \"CHANGE_PAGE_STATE_CONTACT\";","import React, { useEffect, useContext, useState } from 'react';\nimport AppContext from '../../contexts/AppContext.js';\nimport {  CHANGE_PAGE_STATE_HOME,} from \"../../actions/index\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport \"./Home.css\";\n\nimport {\n  FacebookShareButton,\n  FacebookIcon,\n  LinkedinShareButton,\n  LinkedinIcon,\n} from \"react-share\";\n\n//import ProfileCard from '../ProfileCard/ProfileCard';\n//import Mybutton from '../Button/MyButton';\n//import WordCollectionImg from '../../images/wordcollection.png';\n\nconst Home = () => {\n\n  const { dispatch } = useContext(AppContext);\n  const [pageState, setPageState] = useState([true, false, false]);\n\n  useEffect(() => {\n    setPageState([true, false, false]);\n  }, []);\n\n  useEffect(() => {\n    dispatch({\n      type: CHANGE_PAGE_STATE_HOME,\n    });\n    // eslint-disable-next-line\n  }, [pageState]);\n\n\n  const [skillContentAnim, setSkillContentAnim] = useState(\"\");\n  window.addEventListener(\"scroll\", () => {\n    setSkillContentAnim(\"fadein\");\n  });\n\n  return (\n    <div className=\"home\">\n      <div className=\"top\" style={{ backgroundImage: \"TopImage\" }}>\n        <h1>Welcome to Koki Isokawa's website!!</h1>\n      </div>\n      \n      <div className=\"margin\"></div>\n\n      <div className=\"content\">\n        <div className=\"content-grid\">\n          <h3 className=\"about-index\">About</h3>\n          <div className=\"content-about\">\n            1995年生まれ。埼玉県出身。<br></br>\n            8才から野球にのめり込み、クラブチームで野球漬けの日々を送る。<br></br>\n            学部時代は東京大学工学部電子情報工学科に所属し、農業IoT技術とデータ活用の分野で研究を行った。<br></br>\n            大学院は情報理工学系研究科にて時空間データ分析手法について研究を行った。<br></br>\n            その他、東京大学丁友会硬式野球部代表を務めた。<br></br>\n            現在は大手証券会社にてクオンツ・データサイエンス業務に従事。<br></br>\n            趣味は旅行、犬/猫と戯れること。\n          </div>\n        </div>\n        \n        \n        <div className=\"content-grid\">\n          <h3 className=\"content-index\">Educaiton</h3>\n          <div className=\"content-row\">\n            <span className=\"col-1\">Apr. 2019 - Mar. 2021</span>\n            <span className=\"col-2\">東京大学大学院 情報理工学系研究科 電子情報学専攻（喜連川研究室）</span>\n          </div>\n          <div className=\"content-row\">\n            <span className=\"col-1\">Apr. 2017 - Mar. 2019</span>\n            <span className=\"col-2\">東京大学　工学部　電子情報工学科（川原研究室）</span>\n          </div>\n          <div className=\"content-row\">\n            <span className=\"col-1\">Apr. 2015 - Mar. 2017</span>\n            <span className=\"col-2\">東京大学　教養学部（前期課程）</span>\n          </div>\n          <div className=\"content-row\">\n            <span className=\"col-1\">Apr. 2011 - Mar. 2014</span>\n            <span className=\"col-2\">筑波大学附属高校 </span>\n          </div>\n        </div>\n\n        <div className=\"content-grid\">\n          <h3 className=\"content-index\">Publish</h3>\n          <div className=\"content-pub\">\n            <span className=\"color-pub\">携帯電話人口統計および施設情報の複合非負値行列因子分解に基づく都市動態の変化点検知</span>（口頭）<br></br>\n            磯川 弘基（東大），豊田 正史（東大生研），梅本 和俊（東大生研），商 海川（東大生研，情報通信研究機構），是津 耕司（情報通信研究機構）,喜連川 優（東大生研，国立情報学研究所）<br></br>\n            第13回データ工学と情報マネジメントに関するフォーラム（DEIM 2021）<br></br>\n            <strong>DEIM学生プレゼンテーション賞</strong>・<strong><u>優秀論文賞</u></strong><br></br>\n          </div>\n\n          <div className=\"content-pub\">\n            <span className=\"color-pub\">携帯電話人口統計データを用いた新規施設に関わる都市動態の変化解析</span>（口頭）<br></br>\n            磯川 弘基（東大），豊田 正史（東大生研），喜連川 優（東大生研，国立情報学研究所）<br></br>\n            第12回データ工学と情報マネジメントに関するフォーラム（DEIM 2020）<br></br>\n            <strong>DEIM学生プレゼンテーション賞</strong>\n          </div>\n\n          <div className=\"content-pub\">\n            <span className=\"color-pub\">完全制御型植物工場における環境制御最適化に向けた生育段階によるベイズ最適化の適用手法</span>（口頭）<br></br>\n            磯川 弘基（東大），繁田 亮（東大），川原 圭博（東大）<br></br>\n            電子情報通信学会総合大会 2019\n          </div>\n          <div className=\"content-pub\">\n            <span className=\"color-pub\">完全制御型植物工場におけるベイズ最適化を用いた動的な最適環境制御則探索</span>（口頭）<br></br>\n            磯川 弘基 （東大），繁田 亮（東大），川原 圭博（東大） <br></br>\n            電子情報通信学会技術研究報告 2018\n          </div>\n        </div>\n        \n        {/*\n        <div className=\"content-skill\">\n          <h3>Skill</h3>\n          <div className=\"content-skill-list\" style={{ animationName: skillContentAnim }}>\n            <div className=\"skill-lang\">\n              <h2>Language</h2>\n              <div className=\"skill-lang-content\">\n                <h2>Python</h2>\n                <h2>C#</h2>\n                <h2>C</h2>\n                <h2>TypeScript</h2>\n                <h2>HTML</h2>\n                <h2>CSS</h2>\n              </div>\n            </div>\n\n            <div className=\"skill-framework\">\n              <h2 className=\"skill-framework-title\">Framework & Tool</h2>\n              <div className=\"skill-framework-content\">\n                <h2>Unity</h2>\n                <h2>Django</h2>\n                <h2>React</h2>\n              </div>\n            </div>\n          </div>\n        </div>\n        */}\n      </div>\n      \n\n      <div className=\"contact\">\n        <h3>Contact</h3>\n        <div className=\"contact-content\">\n          <h2>SNS</h2>\n          <div className=\"contact-icon\">\n          \n          <li>\n          <FacebookShareButton url={\"https://www.facebook.com/kohki.isokawa\"}>\n          <FacebookIcon size={45} round />\n          </FacebookShareButton>\n          </li>\n          <li>\n          <LinkedinShareButton url={\"https://www.linkedin.com/in/%E5%BC%98%E5%9F%BA-%E7%A3%AF%E5%B7%9D-b018931b2/\"}>\n          <LinkedinIcon size={45} round />\n          </LinkedinShareButton>\n          </li>\n          <li>\n          <a href=\"https://www.slideshare.net/ssuser9baa2a\" className=\"contact-item\">\n            <FontAwesomeIcon icon={[\"fab\", \"slideshare\"]} size={\"3x\"} className=\"logos\" color=\"#3b5998\" />\n          </a>\n          </li>\n          <li>\n          <a href=\"https://www.github.com/isokiso\" className=\"contact-item\">\n            <FontAwesomeIcon icon={[\"fab\", \"github\"]} size={\"3x\"} className=\"logos\" color=\"black\" />\n          </a>\n          </li>\n          <li>\n          <a href=\"https://www.instagram.com/i.so.ka.wa\" className=\"contact-item\">\n            <FontAwesomeIcon icon={[\"fab\", \"instagram\"]} size={\"3x\"} className=\"logos\" color=\"#3b5998\" />\n          </a>\n          </li>\n          </div>\n          <h2>E-mail</h2>\n          <h2 className=\"email\">tyukyubya12215[at]gmail.com</h2>\n        </div>\n      </div>\n    </div>\n  )\n\n};\n\nexport default Home;","import React from 'react';\nimport \"./ProductCard.css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\ninterface ProductCardProps {\n    topImage: string,\n    title: string,\n    description: string,\n    url: string,\n    platformIconIonfo: {\n        info: string,\n        fontName: string,\n    },\n};\n\nconst ProductCard = (props: ProductCardProps) => {\n\n    const info: any = props.platformIconIonfo.info;\n    const fontName: any = props.platformIconIonfo.fontName;\n\n    return (\n        <div className=\"card\">\n            <a href={props.url} className=\"product-card-a\">\n                <div className=\"product-card\"\n                >\n                    <div className=\"top-img\" style={{ backgroundImage: `url(${props.topImage})` }}>\n                    </div>\n                    <div className=\"title-line\">\n                        <h2>{props.title}</h2>\n                        <div className=\"platform-icon\">\n                            <FontAwesomeIcon icon={[info, fontName]} size={\"2x\"} />\n                        </div>\n                    </div>\n                    <p>{props.description}</p>\n                </div>\n            </a>\n        </div>\n    );\n};\n\nexport default ProductCard;","export default __webpack_public_path__ + \"static/media/ES.75d017cf.png\";","export default __webpack_public_path__ + \"static/media/Portfolio.a905bd59.png\";","export default __webpack_public_path__ + \"static/media/FaceTrack.9dbb2387.png\";","import React from 'react';\nimport \"./Product.css\";\nimport ProductCard from \"./ProductCard/ProductCard\";\n\n//import ShirohumiImg from \"../../images/shiro.png\";\n//import PortfolioImg from \"../../images/Portfolio.png\";\nimport ProductSample from \"../../images/ProductSample.png\";\nimport ESgenerator from \"../../images/ES.png\"\nimport Portfolio from \"../../images/Portfolio.png\"\nimport FaceTrack from \"../../images/FaceTrack.png\"\nimport WordCollectionImg from '../../images/wordcollection.png';\n\nconst Product = () => {\n    return (\n        <div className=\"product\">\n            <ProductCard\n                url=\"https://github.com/isokiso/ES_generator\"\n                topImage={ESgenerator}\n                title=\"ES自動生成器\"\n                description=\"自然言語処理で就活のエントリーシートを自動生成しました。\"\n                platformIconIonfo={\n                    {\n                        info: \"fab\",\n                        fontName: \"app-store-ios\"\n                    }\n                }\n            />\n\n            <ProductCard\n                url=\"\"\n                topImage={Portfolio}\n                title=\"ポートフォリオ\"\n                description=\"Reactを使用して本サイトを作成しました。\"\n                platformIconIonfo={\n                    {\n                        info: \"fas\",\n                        fontName: \"laptop\"\n                    }\n                }\n            />\n\n            <ProductCard\n                url=\"\"\n                topImage={FaceTrack}\n                title=\"顔の向きによるハンドフリーなPC操作機能\"\n                description=\"OpenCV, FaceTrackerを用いて顔のトラッキングをし、PC操作補助機能の実装をしました。\"\n                platformIconIonfo={\n                    {\n                        info: \"fas\",\n                        fontName: \"laptop\"\n                    }\n                }\n            />\n        </div>\n    );\n};\n\nexport default Product;\n","export default __webpack_public_path__ + \"static/media/Cat.a79dc1d1.png\";","import React from 'react';\nimport \"./Misc.css\";\nimport ProductCard from \"../Product/ProductCard/ProductCard\";\n\n//import ShirohumiImg from \"../../images/shiro.png\";\n//import PortfolioImg from \"../../images/Portfolio.png\";\nimport ProductSample from \"../../images/Cat.png\";\nimport { MobileScreenShareRounded } from '@material-ui/icons';\n\n\nconst Misc = () => {\n    return (\n        <div className=\"misc\">\n            {/*\n            <ProductCard\n                url=\"https://github.com/isokiso/ES_generator\"\n                topImage={ESgenerator}\n                title=\"ES自動生成器\"\n                description=\"自然言語処理で就活のエントリーシートを自動生成しました。\"\n                platformIconIonfo={\n                    {\n                        info: \"fab\",\n                        fontName: \"app-store-ios\"\n                    }\n                }\n            />\n\n            <ProductCard\n                url=\"\"\n                topImage={ProductSample}\n                title=\"ポートフォリオ\"\n                description=\"Reactを使用して作成しました。\"\n                platformIconIonfo={\n                    {\n                        info: \"fas\",\n                        fontName: \"laptop\"\n                    }\n                }\n            />\n            */}\n            <ProductCard\n                url=\"\"\n                topImage={ProductSample}\n                title=\"準備中...\"\n                description=\"\"\n                platformIconIonfo={\n                    {\n                        info: \"fas\",\n                        fontName: \"laptop\"\n                    }\n                }\n            />\n        </div>\n    );\n};\n\nexport default Misc;\n","import React, { useEffect, useContext, useState, useCallback } from 'react';\nimport Product from \"../Product/Product\";\nimport Misc from \"../Misc/Misc\"\n//import Music from \"../Music/Music\";\n//import Youtube from \"../Youtube/Youtube\";\nimport AppContext from '../../contexts/AppContext.js';\nimport {\n  CHANGE_PAGE_STATE_WORKS,\n} from \"../../actions/index\";\nimport \"./Works.css\";\n\n\nconst Works = () => {\n  const { dispatch } = useContext(AppContext);\n  const [pageState, setPageState] = useState([true, false, false]);\n  const stableDispatch = useCallback(dispatch, [pageState]);\n\n  const [toggleState, setToggleState] = useState(\"product\");\n\n  useEffect(() => {\n    setPageState([true, false, false]);\n  }, []);\n\n  useEffect(() => {\n    stableDispatch({ type: CHANGE_PAGE_STATE_WORKS });\n    // eslint-disable-next-line\n  }, [pageState]);\n\n  const changeToggleState = (toggle: string): void => {\n    setToggleState(toggle);\n  };\n\n  const toggleButtonClassName = (buttonName: string): string => {\n\n    let selectedButtonClass: string = \"\";\n    if (toggleState === buttonName) {\n      selectedButtonClass = \"toggle-button-selected\";\n    }\n    return ['toggle-button-content', selectedButtonClass].join(\" \");\n  };\n\n   const showTable = (): JSX.Element => {\n    if (toggleState === \"product\") {\n      return <Product />\n    }\n    else if (toggleState === \"misc\") {\n      return <Misc />\n    }\n    else {\n      return <Misc />\n    }\n  }; \n\n\n  return (\n    <div className=\"Works\">\n      <h1 className=\"title\">Works</h1>\n      <div className=\"toggle-buttons\">\n        <div className={toggleButtonClassName(\"product\")}\n          onClick={e => changeToggleState(\"product\")}\n        >\n          <p>Product</p>\n        </div>\n\n        <div className={toggleButtonClassName(\"misc\")}\n          onClick={e => changeToggleState(\"misc\")}\n        >\n          <p>Misc</p>\n        </div>\n      </div>\n\n      { <div>\n        {showTable()}\n      </div> }\n\n    </div >\n    \n    \n  )\n};\n\nexport default Works;","import React, { useEffect, useContext, useState } from 'react';\nimport AppContext from '../../contexts/AppContext.js';\nimport {CHANGE_PAGE_STATE_CONTACT,} from \"../../actions/index\";\nimport \"./Contact.css\";\n//import Youtube from \"../Youtube/Youtube\";\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nconst Contact = () => {\n  const { dispatch } = useContext(AppContext);\n\n  const [pageState, setPageState] = useState([true, false, false]);\n  useEffect(() => {\n    setPageState([true, false, false]);\n  }, []);\n\n  useEffect(() => {\n    dispatch({\n      type: CHANGE_PAGE_STATE_CONTACT,\n    });\n    // eslint-disable-next-line\n  }, [pageState]);\n\n  return (\n    <div>\n      <h1 className=\"Misc\">\n      </h1>\n    </div>\n  )\n\n};\n\nexport default Contact;","import React from 'react'\nimport \"./HeaderLogo.css\";\n\ninterface HeaderLogoProps {\n  logoColor: string;\n}\n\nconst HeaderLogo = (props: HeaderLogoProps) => {\n  return (\n    <div className=\"headerLogo\" style={{ backgroundColor: props.logoColor }}>\n      <p>Profile</p>\n    </div>\n  )\n};\n\nexport default HeaderLogo;","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './HeaderButton.css';\n\ninterface NavigationButtonProps {\n  contentTextColor: string;\n  contentText: string;\n  fontInfo: {\n    info: string,\n    fontName: string,\n  };\n};\n\n\nconst HeaderButton = (props: NavigationButtonProps) => {\n\n  const info: any = props.fontInfo.info;\n  const fontName: any = props.fontInfo.fontName;\n\n  return (\n    <div className=\"HeaderButton\">\n      <p style={{ color: props.contentTextColor }}>\n        <FontAwesomeIcon icon={[info, fontName]} /> {props.contentText}\n      </p>\n    </div>\n  )\n};\n\nexport default HeaderButton;\n","import React, { useContext, useEffect, useState } from 'react';\nimport AppContext from '../../contexts/AppContext.js';\nimport \"./Header.css\";\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from 'react-router-dom';\n\nimport Home from \"../Home/Home\";\nimport Works from \"../Works/Works\";\nimport Contact from \"../Contact/Contact\";\n\nimport HeaderLogo from \"./HeaderLogo/HeaderLogo\";\nimport HeaderButton from './HeaderButton/HeaderButton';\n\nconst Header = () => {\n\n  const { state } = useContext(AppContext);\n\n  const [homeColor, setHomeColor] = useState(\"#00A8CC\");\n  const [worksColor, setWorksColor] = useState(\"#ED9542\");\n  const [contactColor, setContactColor] = useState(\"#E64343\");\n  const [logoColor, setLogoColor] = useState(\"#00A8CC\");\n\n\n  useEffect(() => {\n    if (state[0] === true) {\n      setHomeColor(\"#00A8CC\");\n      setWorksColor(\"#5A5A5A\");\n      setContactColor(\"#5A5A5A\");\n\n      setLogoColor(homeColor);\n    }\n    else if (state[1] === true) {\n      setHomeColor(\"#5A5A5A\");\n      setWorksColor(\"#ED9542\");\n      setContactColor(\"#5A5A5A\");\n\n      setLogoColor(worksColor);\n    }\n    else {\n      setHomeColor(\"#5A5A5A\");\n      setWorksColor(\"#5A5A5A\");\n      setContactColor(\"#E64343\");\n\n      setLogoColor(contactColor);\n    }\n    // eslint-disable-next-line\n  }, [state])\n\n  return (\n    <Router>\n      <header style={{ borderBottomColor: logoColor }}>\n        <div className=\"header-left\">\n          <HeaderLogo logoColor={logoColor} />\n        </div>\n\n        <div className=\"header-right\">\n\n          <Link exact=\"true\" to=\"/\" style={{ textDecoration: 'none' }}>\n            <HeaderButton\n              contentTextColor={homeColor}\n              contentText={\"Home\"}\n              fontInfo={\n                {\n                  info: \"fas\",\n                  fontName: \"home\"\n                }\n              }\n            />\n          </Link>\n\n          <Link exact=\"true\" to=\"/works\" style={{ textDecoration: 'none' }}>\n            <HeaderButton\n              contentTextColor={worksColor}\n              contentText={\"Works\"}\n              fontInfo={\n                {\n                  info: \"fas\",\n                  fontName: \"laptop-code\"\n                }\n              }\n            />\n          </Link>\n          {/* \n          <Link exact=\"true\" to=\"/contact\" style={{ textDecoration: 'none' }}>\n            <HeaderButton\n              contentTextColor={contactColor}\n              contentText={\"Contact\"}\n              fontInfo={\n                {\n                  info: \"fab\",\n                  fontName: \"Contact\"\n                }\n              }\n            />\n          </Link>\n          */}\n        </div>\n\n      </header>\n\n      <Switch>\n        <Route path=\"/works\">\n          <Works />\n        </Route>\n\n        <Route path=\"/contact\">\n          <Contact />\n        </Route>\n\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n\n    </Router>\n\n  );\n}\n\nexport default Header;\n","import {\n    CHANGE_PAGE_STATE_HOME,\n    CHANGE_PAGE_STATE_WORKS,\n    CHANGE_PAGE_STATE_CONTACT\n  } from '../actions';\n  \n  const pageState = (state = [true, false, false], action) => {\n    switch (action.type) {\n      case CHANGE_PAGE_STATE_HOME:\n        return [true, false, false];\n      case CHANGE_PAGE_STATE_WORKS:\n        return [false, true, false];\n      case CHANGE_PAGE_STATE_CONTACT:\n        return [false, false, true];\n      default:\n        return [true, false, false];\n    }\n  };\n  \n  export default pageState;","import React, { useReducer } from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport pageState from './reducers/pageState.js';\nimport AppContext from './contexts/AppContext.js';\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\n\nconst App = () => {\n\n  const [state, dispatch] = useReducer(pageState, [true, false, false])\n\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      <div className=\"App\">\n        <Router>\n          <Header />\n        </Router>\n      </div >\n    </AppContext.Provider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  type Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n  };\n  \n  export function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(\n        process.env.PUBLIC_URL,\n        window.location.href\n      );\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' }\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { library } from '@fortawesome/fontawesome-svg-core'; //fontawesomeのコアファイル\nimport { fab } from '@fortawesome/free-brands-svg-icons'; //fontawesomeのbrandアイコンのインポート\nimport { fas } from '@fortawesome/free-solid-svg-icons'; //fontawesomeのsolidアイコンのインポート\nimport { far } from '@fortawesome/free-regular-svg-icons'; //fontawesomeのregularアイコンのインポート\n\nlibrary.add(fab, fas, far);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}